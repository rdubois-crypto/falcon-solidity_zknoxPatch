// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {Falcon} from "../src/Falcon.sol";

contract FalconTest is Test {
    // ans generated from python code
    // prettier-ignore
    uint16[512] hash2PointAnswer = [ 7373, 883, 5550, 2322, 8580, 11319, 1037, 9708, 7159, 4158, 683, 1120, 9948, 11269, 790, 6252, 2698, 12217, 3596, 1819, 10441, 8257, 3040, 5573, 5213, 5150, 6123, 4363, 10505, 3359, 363, 10882, 4000, 3996, 2150, 6823, 8209, 10781, 11953, 397, 10576, 5527, 239, 7733, 8493, 3126, 3301, 10385, 7235, 8080, 1175, 6491, 11269, 3618, 3479, 1771, 406, 5245, 9874, 10195, 6777, 5908, 10147, 2321, 71, 5157, 6106, 9459, 7587, 7005, 10808, 9396, 6657, 10692, 11888, 10688, 9776, 6123, 11708, 6919, 1184, 3832, 4832, 6274, 5330, 7664, 9929, 4401, 8412, 7710, 1733, 8158, 8469, 10972, 8546, 10418, 1032, 5926, 6686, 1606, 2094, 6147, 4268, 2856, 9724, 8827, 2276, 327, 364, 3546, 5060, 38, 6461, 7825, 11703, 10229, 586, 6232, 5538, 8703, 9068, 1751, 1261, 10886, 8971, 10072, 4803, 12269, 11905, 1677, 168, 2793, 2446, 5598, 8609, 4471, 10206, 1457, 3344, 2115, 6331, 11897, 1509, 8496, 12033, 3422, 10769, 11981, 6746, 7141, 94, 5401, 5412, 7172, 4080, 1804, 5720, 7593, 8985, 1068, 866, 2872, 1144, 8687, 1395, 3877, 6666, 380, 1886, 8886, 3537, 6025, 4523, 11893, 2189, 9675, 9704, 2827, 4970, 1684, 6198, 9349, 2356, 9487, 9011, 6136, 2937, 7772, 8917, 5851, 5574, 4245, 1868, 3395, 11345, 9115, 6179, 8240, 170, 11821, 11009, 10257, 2003, 2154, 4612, 1906, 7653, 203, 6384, 437, 6531, 145, 10917, 2606, 6845, 8790, 700, 6949, 12030, 3271, 8790, 8978, 856, 963, 7089, 7632, 4568, 1919, 981, 8380, 3234, 8620, 9570, 6974, 3323, 9642, 11463, 7488, 12036, 9285, 2705, 10601, 10934, 6299, 2429, 5872, 2395, 8623, 10114, 2620, 2630, 590, 3967, 4556, 9924, 879, 2707, 4040, 6396, 3889, 4566, 8314, 6265, 9124, 11261, 5979, 11982, 1516, 1839, 8051, 2727, 11180, 7284, 8952, 6320, 2185, 12130, 2611, 7147, 8642, 333, 9797, 3864, 3853, 2205, 537, 2776, 6938, 10117, 3333, 5040, 4924, 7216, 862, 5323, 5855, 7323, 11256, 7123, 5614, 10247, 6583, 1246, 2875, 9923, 271, 2680, 4780, 3484, 907, 542, 9323, 6595, 12025, 7084, 3173, 10515, 7797, 9340, 4198, 877, 7058, 10517, 10104, 2880, 8175, 9685, 7269, 11157, 3314, 3034, 11799, 2551, 11904, 7429, 5751, 3132, 3452, 4780, 7713, 6464, 4353, 8079, 10272, 9572, 3381, 2148, 4100, 4467, 8107, 60, 609, 67, 11037, 478, 3026, 9156, 4803, 7480, 5859, 8840, 3731, 3487, 5738, 9166, 2234, 292, 5043, 6837, 7510, 7688, 2131, 11644, 12285, 4427, 6851, 5184, 5932, 242, 4802, 8613, 11136, 1682, 11256, 6734, 6703, 7082, 9114, 9563, 9119, 8417, 10026, 12245, 2885, 1798, 8815, 4490, 4079, 9728, 2595, 4923, 9698, 9093, 3926, 670, 4016, 10825, 1518, 8949, 909, 8707, 9346, 8743, 2106, 3059, 11835, 11278, 10934, 10177, 7263, 10275, 5048, 6952, 6250, 2353, 3920, 2781, 7631, 8632, 1223, 5428, 7385, 10594, 12115, 5957, 10539, 6384, 2624, 3349, 718, 8849, 228, 10276, 6353, 10616, 1686, 10242, 9974, 8008, 3376, 8098, 4266, 1021, 10080, 8667, 8964, 3002, 7628, 6421, 1920, 3720, 9781, 4655, 8790, 10767, 10205, 7210, 1727, 9543, 11341, 3906, 6320, 11588, 4259, 11000, 12284, 2957, 9151, 1844, 2047, 7067, 7948, 4312, 10967, 1997, 3450, 7, 9290, 10288, 5251, 2092, 3033, 10705, 9763, 12187, 4430, 6390, 3185, 12255, 287, 11098, 5316, 9010, 6996, 4205, 991, 2719, 6812, 8947, 7238, 4094, 2293];
    Falcon falcon;
    function setUp() public {
        falcon = new Falcon();
    }

    function testHashToPoint() public view {
        bytes memory salt = "abc";
        bytes memory msgHash = "def";
        uint256[512] memory hashed = falcon.hashToPoint(salt, msgHash);
        console.log("----------  hashed: -------");
        for (uint i = 0; i < 512; i++) {
            require(hashed[i] == hash2PointAnswer[i], "hashed[i] != answer[i]");
        }
    }

    function testVerify() public view {
        bytes memory msgs = "falcon in sol now?";
        // prettier-ignore
        Falcon.Signature memory signature = Falcon.Signature({
            salt: "dac4a914a037f9e5377e1c601db978f82e3fec4a14c693be3f3e53cd7114ff18437086007112b3b5",
            s1: [127, 208, 263, 10, -177, 610, 98, 161, 215, 14, -51, -391, 37, -86, 148, -79, 75, -164, -153, 112, -35, -32, 130, -44, -3, 28, 65, -33, 21, -552, 160, -190, 36, 173, 46, 60, 92, 239, -72, -36, -69, 148, 33, 12, -173, 174, -33, -123, 176, -231, -3, 214, -42, -111, 11, 102, -121, 25, 144, 103, -98, -248, -4, -163, 97, -15, 281, 110, 22, 256, 100, -117, 147, 123, -259, 14, 144, -32, 129, 82, 117, -170, 5, -131, 4, 151, -103, 124, 101, -348, 264, -56, -179, -289, 2, 336, -23, -169, -397, -128, -297, -156, -313, 299, 45, -249, -116, -287, -13, -75, -246, 132, -60, -33, -291, 42, -79, 107, 68, -160, -193, -254, 106, -34, 9, -96, 250, 276, 82, 93, 132, -269, 83, 125, 10, -32, -23, 126, 40, -137, 23, 50, -62, 77, -60, 197, 9, -110, 36, 13, -210, -28, 15, 282, -82, 72, -129, -184, -190, -145, -461, 166, 389, 165, -364, 278, 3, 209, 78, -372, 115, -175, -180, -98, 160, -30, 55, 24, -35, -307, -65, -75, -132, -4, 23, -100, 114, -14, 5, -383, 47, 48, 22, 118, -447, -135, -253, 74, -249, 157, -75, -228, 74, 206, 127, -251, -54, 10, -30, 87, -240, -157, 113, 84, 256, -316, 13, 2, 66, 187, 75, 36, 121, -51, 106, -312, 55, -314, -150, 17, 17, 46, 213, 11, -38, -61, -146, 221, 27, -99, 291, -367, -29, -269, 103, -41, -34, -348, 166, -314, 10, 381, -308, -131, 134, -130, 64, 192, 34, -93, -124, -104, -1, -155, -331, -201, 126, -11, -26, -299, 213, 212, -190, 57, 186, 154, -161, -93, 33, 223, 66, 133, 169, 85, 361, -152, -417, -16, 267, -298, -60, 1, -155, 88, -7, -371, 15, 199, 103, -22, -260, 196, 198, 13, -75, -200, 124, -23, 82, 37, -249, 35, -185, 199, -24, 134, 80, 170, -305, 187, -389, 47, -127, -237, 309, 28, -2, -346, 309, -284, 155, 28, 124, -64, -73, -83, -397, -203, -224, 84, 130, 243, -9, -86, -226, -261, -1, 13, -93, -68, -1, -57, -131, -136, 4, 212, 327, -75, 55, -4, 93, 119, 121, 45, -75, -128, 248, 158, 162, -263, -23, -117, -119, -88, 71, 306, 292, 25, 8, 132, -132, -58, 209, 43, -197, 189, 2, -7, -246, -67, -224, -94, 124, 173, 92, -155, -4, 147, -143, 281, -40, -25, -349, 241, -195, 222, -100, 475, -189, 30, -255, 234, 158, -323, -40, -151, -105, -100, 18, -8, -164, 190, -108, -42, 392, 20, -46, 32, 136, 97, 187, 403, 180, -91, -401, -458, 249, 323, 2, 149, -40, 61, -63, -93, -191, -171, 187, -1, -120, 27, -79, -116, 174, 3, 7, -104, 36, 64, 132, -57, 3, 8, 32, 28, 286, 172, 99, -239, 86, -29, 142, 113, 72, -141, 34, 42, 191, 182, -115, -177, 22, -25, -81, -157, -183, -160, -98, -310, 283, 86, -289, 380, -17, -45, -108, -162, -73, -171, -125, 15, -86, -134, 9, -311, 49, -133, 299, 166, 189, 44, 18, -180]
        });
        // prettier-ignore
        uint[512] memory h = [391, 7113, 10981, 11620, 10211, 2954, 690, 4242, 6567, 7445, 8328, 3330, 7639, 146, 7512, 1784, 914, 9489, 3608, 5879, 4836, 10694, 8289, 7005, 7941, 2545, 8659, 9933, 7369, 2429, 11140, 9973, 865, 11806, 4021, 10392, 4651, 10866, 3247, 5222, 7501, 1133, 2260, 4686, 1634, 5733, 237, 7765, 11835, 5752, 4589, 7038, 86, 5006, 1880, 11052, 3696, 7502, 10626, 5883, 1973, 4974, 9675, 3369, 9708, 2897, 11443, 9955, 3880, 99, 6594, 8755, 865, 319, 60, 5757, 8672, 10338, 2977, 1192, 6584, 2367, 938, 6030, 6927, 10889, 7870, 3177, 3543, 2485, 8273, 1199, 4851, 11680, 9093, 1462, 7240, 4822, 9907, 5499, 5780, 8820, 11662, 5679, 8003, 1119, 6902, 7922, 7767, 6184, 7459, 3093, 7857, 6076, 5281, 11208, 10224, 10115, 1345, 9368, 6109, 11954, 2046, 9544, 5163, 513, 141, 8117, 5286, 2598, 10993, 1815, 3635, 3504, 5265, 6333, 1492, 8458, 7860, 5078, 5054, 319, 3107, 10135, 2336, 263, 3661, 329, 4153, 6496, 1513, 6968, 12241, 10517, 15, 1112, 5790, 9107, 2207, 800, 10003, 6830, 7223, 5273, 2895, 517, 87, 8203, 4395, 9529, 7280, 8162, 1815, 7744, 8930, 2854, 1892, 3955, 11647, 261, 10785, 2296, 5513, 8030, 6210, 8367, 6561, 6531, 8218, 147, 12131, 4681, 7415, 5727, 11407, 929, 592, 5113, 7945, 9433, 170, 1734, 4355, 4658, 1673, 11567, 5443, 6638, 7243, 2224, 11559, 10574, 10331, 2788, 7987, 791, 2182, 7277, 1519, 4354, 9958, 469, 2087, 7486, 8206, 4316, 4893, 9370, 11819, 6727, 5337, 3422, 5623, 9099, 1005, 74, 4348, 686, 6429, 10180, 6013, 10191, 3800, 11321, 11529, 10750, 712, 4901, 9606, 10269, 4915, 5740, 4803, 3069, 10729, 7446, 4163, 5709, 11238, 1770, 6293, 1708, 11792, 1173, 6839, 10557, 8771, 3264, 9010, 942, 11543, 8663, 8376, 9868, 2814, 5793, 5534, 10644, 992, 1082, 899, 11154, 8480, 11293, 4138, 11635, 8607, 11470, 9611, 5775, 6914, 2129, 10513, 9309, 1595, 1263, 652, 7114, 12031, 9011, 4039, 6624, 4242, 2180, 4434, 3452, 5937, 11113, 8763, 8310, 991, 654, 2340, 7125, 4657, 4257, 7437, 3172, 7407, 2091, 4446, 10265, 5824, 10814, 12273, 1778, 4464, 2162, 1721, 2039, 58, 6178, 1631, 304, 3424, 6043, 10145, 8637, 8150, 3430, 4816, 11005, 3855, 8998, 11152, 525, 3410, 10005, 11194, 6056, 9841, 7511, 1677, 163, 225, 6593, 8803, 4181, 10084, 7545, 5753, 9464, 43, 8739, 7490, 6040, 12275, 10238, 10660, 6401, 12113, 4240, 2403, 3741, 10393, 3018, 12263, 7509, 3746, 10245, 9089, 4150, 8345, 9530, 11780, 3687, 5901, 9680, 657, 11216, 5218, 5581, 3981, 8767, 10245, 1836, 7336, 9896, 4486, 6006, 11469, 7279, 5242, 2374, 6642, 1658, 10270, 11973, 2472, 3844, 5709, 2497, 6150, 291, 2323, 8664, 4981, 8741, 7205, 11952, 8156, 11961, 9364, 7209, 3386, 7851, 3997, 7560, 4580, 3517, 6867, 8572, 11236, 7012, 3206, 7992, 5564, 10614, 7614, 10933, 4204, 4111, 2444, 11347, 7683, 7803, 7440, 5355, 5363, 2867, 5294, 2459, 11052, 10246, 5665, 9910, 970, 6835, 7672, 12280, 5569, 7512, 11604, 9648, 7333, 12039, 5423, 6479, 10224, 10245, 2964, 10283, 7209, 11222, 1746, 10204, 6044, 2751, 244, 5164, 12139, 2501, 8978, 240, 4511, 6826, 6746, 5429, 464, 10061, 2722, 2799, 1331, 8329, 111, 9720, 3434, 6946, 5208, 6882, 3354, 2193, 8409, 11648, 3056, 318, 6587, 3924, 7780, 1993, 1779, 7153];
        falcon.verify(msgs, signature, h);
    }
}
